name: CI

env:
  COMPOSE_INTERACTIVE_NO_CLI: 1
  PHP_CS_FIXER_IGNORE_ENV: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  pest:
    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        laravel: [8, 9, 10, 11]
        php: [8.1, 8.2, 8.3]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 10.*
            testbench: ^8.20
          - laravel: 11.*
            testbench: ^9.0
        exclude:
          - php: 8.1
            laravel: 11.*

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install composer dependencies
        run: composer require "illuminate/support:^${{ matrix.laravel }}.0"

      - name: Run tests
        run: vendor/bin/pest

  phpstan:
    name: Static analysis (PHPStan)

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        laravel: [8, 9, 10, 11]
        php: [8.1, 8.2, 8.3]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 10.*
            testbench: ^8.20
          - laravel: 11.*
            testbench: ^9.0
        exclude:
          - php: 8.1
            laravel: 11.*

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install composer dependencies
        run: composer install

      - name: Run phpstan
        run: vendor/bin/phpstan analyse
